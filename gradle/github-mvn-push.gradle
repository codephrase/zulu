apply plugin: 'maven-publish'

publishing {
    publications {
        maven(MavenPublication) {
            groupId POM_GROUP_ID
            artifactId POM_ARTIFACT_ID
            version Configurations.VERSION_NAME

            if (POM_PACKAGING == 'aar')
                artifact "$buildDir/outputs/aar/${project.getName()}-release.aar"
            else
                artifact "$buildDir/libs/${project.getName()}.jar"

            pom.name = POM_NAME
            pom.packaging = POM_PACKAGING
            pom.description = POM_DESCRIPTION
            pom.url = POM_URL

            pom.scm {
                url = POM_SCM_URL
                connection = POM_SCM_CONNECTION
                developerConnection = POM_SCM_DEV_CONNECTION
            }

            pom.licenses {
                license {
                    name = POM_LICENSE_NAME
                    url = POM_LICENSE_URL
                    distribution = POM_LICENSE_DISTRIBUTION
                }
            }

            pom.developers {
                developer {
                    id = POM_DEVELOPER_ID
                    name = POM_DEVELOPER_NAME
                }
            }

            pom.withXml {
                final dependenciesNode = asNode().appendNode('dependencies')

                def addDependency = { Dependency dependency, String scope ->
                    if (dependency.group != null &&
                            dependency.version != null && dependency.version != 'unspecified' &&
                            dependency.name != null && dependency.name != 'unspecified') {

                        final dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', dependency.group)
                        dependencyNode.appendNode('artifactId', dependency.name)
                        dependencyNode.appendNode('version', dependency.version)
                        dependencyNode.appendNode('scope', scope)

                        if (!dependency.transitive) {
                            final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                            exclusionNode.appendNode('groupId', '*')
                            exclusionNode.appendNode('artifactId', '*')
                        } else if (!dependency.properties.excludeRules.empty) {
                            final exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                            dependency.properties.excludeRules.each { ExcludeRule rule ->
                                exclusionNode.appendNode('groupId', rule.group ?: '*')
                                exclusionNode.appendNode('artifactId', rule.module ?: '*')
                            }
                        }
                    }
                }

                configurations.implementation.dependencies.each { dependency ->
                    addDependency(dependency, 'runtime')
                }

                configurations.api.dependencies.each { dependency ->
                    addDependency(dependency, 'compile')
                }
            }
        }
    }

    repositories {
        maven {
            name = 'GitHubPackages'
            url = uri("https://maven.pkg.github.com/$GITHUB_PACKAGES_OWNER/$GITHUB_PACKAGES_REPOSITORY")
            credentials {
                username = getEnvironmentVariable('GITHUB_PACKAGES_USERNAME')
                password = getEnvironmentVariable('GITHUB_PACKAGES_TOKEN')
            }
        }
    }
}